{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elvin\\\\Development\\\\spotify-visual-creator\\\\components\\\\AnimationPanel.jsx\";\nvar __jsx = React.createElement;\nimport * as THREE from 'three';\nimport React from 'react';\nimport '../styles/AnimationPanel.scss';\n\nclass AnimationPanel extends React.Component {\n  componentDidMount() {\n    let scene = new THREE.Scene();\n    let camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    let renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5);\n    this.mount.appendChild(renderer.domElement);\n    let material = new THREE.LineBasicMaterial({\n      color: 0xfd44f5\n    });\n    let geometry = new THREE.Geometry();\n    geometry.vertices.push(new THREE.Vector3(0, 0.5, 10), new THREE.Vector3(0, 0, 0));\n    let angleDeltas = [];\n    let lines = [];\n\n    for (let i = 0; i < 40; i++) {\n      const line = new THREE.Line(geometry, material);\n\n      if (i < 20) {\n        line.rotateX(0.07 * i);\n      } else {\n        line.rotateX(-0.07 * (i - 20));\n      }\n\n      lines.push(line);\n      angleDeltas.push(0.02);\n      scene.add(line);\n    }\n\n    camera.position.z = 10;\n\n    let animate = function () {\n      requestAnimationFrame(animate);\n      lines.forEach((line, index) => {\n        console.log(index);\n\n        if (line.rotation.y > 1.6) {\n          angleDeltas[index] = -angleDeltas[index];\n        }\n\n        if (line.rotation.y < -1.6) {\n          angleDeltas[index] = -angleDeltas[index];\n        }\n\n        line.rotation.y += angleDeltas[index];\n      });\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"AnimationPanel\",\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default AnimationPanel;","map":{"version":3,"sources":["C:/Users/elvin/Development/spotify-visual-creator/components/AnimationPanel.jsx"],"names":["THREE","React","AnimationPanel","Component","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","material","LineBasicMaterial","color","geometry","Geometry","vertices","push","Vector3","angleDeltas","lines","i","line","Line","rotateX","add","position","z","animate","requestAnimationFrame","forEach","index","console","log","rotation","y","render","ref"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\r\nimport React from 'react';\r\nimport '../styles/AnimationPanel.scss'\r\n\r\nclass AnimationPanel extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let scene = new THREE.Scene();\r\n    let camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n    let renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5);\r\n    this.mount.appendChild(renderer.domElement);\r\n    let material = new THREE.LineBasicMaterial({\r\n      color: 0xfd44f5,\r\n    });\r\n\r\n    let geometry = new THREE.Geometry();\r\n    geometry.vertices.push(\r\n      new THREE.Vector3( 0, 0.5, 10 ),\r\n      new THREE.Vector3( 0, 0, 0 )\r\n    );\r\n\r\n    let angleDeltas = [];\r\n    let lines = [];\r\n    for (let i = 0; i < 40; i++) {\r\n      const line = new THREE.Line(geometry, material);\r\n      if (i < 20) {\r\n        line.rotateX(0.07 * i);\r\n      } else {\r\n        line.rotateX(-0.07 * (i - 20));\r\n      }\r\n      lines.push(line);\r\n      angleDeltas.push(0.02);\r\n      scene.add(line);\r\n    }\r\n    camera.position.z = 10;\r\n    let animate = function () {\r\n      requestAnimationFrame( animate );\r\n      lines.forEach((line, index) => {\r\n        console.log(index);\r\n        if (line.rotation.y > 1.6) {\r\n          angleDeltas[index] = -(angleDeltas[index]);\r\n        }\r\n        if (line.rotation.y < -1.6) {\r\n          angleDeltas[index] = -(angleDeltas[index]);\r\n        }\r\n        line.rotation.y += angleDeltas[index];\r\n      });\r\n      renderer.render( scene, camera );\r\n    };\r\n    animate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AnimationPanel\" ref={ref => (this.mount = ref)}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimationPanel;"]},"metadata":{},"sourceType":"module"}