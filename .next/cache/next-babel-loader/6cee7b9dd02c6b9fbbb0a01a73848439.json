{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\elvin\\\\Development\\\\spotify-visual-creator\\\\components\\\\AnimationPanel.jsx\";\nvar __jsx = React.createElement;\nimport * as THREE from 'three';\nimport React from 'react';\nimport '../styles/AnimationPanel.scss';\n\nvar AnimationPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AnimationPanel, _React$Component);\n\n  function AnimationPanel(props) {\n    var _this;\n\n    _classCallCheck(this, AnimationPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimationPanel).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function () {\n      console.log('animating');\n      requestAnimationFrame();\n    });\n\n    return _this;\n  }\n\n  _createClass(AnimationPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5);\n      this.mount.appendChild(this.renderer.domElement);\n      var material = new THREE.LineBasicMaterial({\n        color: 0xfd44f5\n      });\n      var geometry = new THREE.Geometry();\n      geometry.vertices.push(new THREE.Vector3(0, 0.5, 10), new THREE.Vector3(0, 0, 0));\n      var angleDeltas = [];\n      var lines = [];\n\n      for (var i = 0; i < 40; i++) {\n        var line = new THREE.Line(geometry, material);\n\n        if (i < 20) {\n          line.rotateX(0.07 * i);\n        } else {\n          line.rotateX(-0.07 * (i - 20));\n        }\n\n        lines.push(line);\n        angleDeltas.push(0.02);\n        this.scene.add(line);\n      }\n\n      this.camera.position.z = 10;\n\n      this.animate = function () {\n        console.log('animating');\n        requestAnimationFrame(_this2.animate);\n        lines.forEach(function (line, index) {\n          if (line.rotation.y > 1.6) {\n            angleDeltas[index] = -angleDeltas[index];\n          }\n\n          if (line.rotation.y < -1.6) {\n            angleDeltas[index] = -angleDeltas[index];\n          }\n\n          line.rotation.y += angleDeltas[index];\n        });\n\n        _this2.renderer.render(_this2.scene, _this2.camera);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        className: \"AnimationPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        ref: function ref(_ref) {\n          return _this3.mount = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this.animate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"play\"));\n    }\n  }]);\n\n  return AnimationPanel;\n}(React.Component);\n\nexport default AnimationPanel;","map":{"version":3,"sources":["C:/Users/elvin/Development/spotify-visual-creator/components/AnimationPanel.jsx"],"names":["THREE","React","AnimationPanel","props","console","log","requestAnimationFrame","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","material","LineBasicMaterial","color","geometry","Geometry","vertices","push","Vector3","angleDeltas","lines","i","line","Line","rotateX","add","position","z","animate","forEach","index","rotation","y","render","ref","Component"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;;IAEMC,c;;;;;AAEJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,8DAkDT,YAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,MAAAA,qBAAqB;AAEtB,KAtDkB;;AAAA;AAElB;;;;wCAEmB;AAAA;;AAClB,WAAKC,KAAL,GAAa,IAAIP,KAAK,CAACQ,KAAV,EAAb;AACA,WAAKC,MAAL,GAAc,IAAIT,KAAK,CAACU,iBAAV,CAA4B,EAA5B,EAAgCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAAzD,EAAsE,GAAtE,EAA2E,IAA3E,CAAd;AACA,WAAKC,QAAL,GAAgB,IAAId,KAAK,CAACe,aAAV,EAAhB;AACA,WAAKD,QAAL,CAAcE,OAAd,CAAsBL,MAAM,CAACC,UAAP,GAAoB,GAA1C,EAA+CD,MAAM,CAACE,WAAP,GAAqB,GAApE;AACA,WAAKI,KAAL,CAAWC,WAAX,CAAuB,KAAKJ,QAAL,CAAcK,UAArC;AACA,UAAIC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,iBAAV,CAA4B;AACzCC,QAAAA,KAAK,EAAE;AADkC,OAA5B,CAAf;AAIA,UAAIC,QAAQ,GAAG,IAAIvB,KAAK,CAACwB,QAAV,EAAf;AACAD,MAAAA,QAAQ,CAACE,QAAT,CAAkBC,IAAlB,CACE,IAAI1B,KAAK,CAAC2B,OAAV,CAAmB,CAAnB,EAAsB,GAAtB,EAA2B,EAA3B,CADF,EAEE,IAAI3B,KAAK,CAAC2B,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAFF;AAKA,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,YAAMC,IAAI,GAAG,IAAI/B,KAAK,CAACgC,IAAV,CAAeT,QAAf,EAAyBH,QAAzB,CAAb;;AACA,YAAIU,CAAC,GAAG,EAAR,EAAY;AACVC,UAAAA,IAAI,CAACE,OAAL,CAAa,OAAOH,CAApB;AACD,SAFD,MAEO;AACLC,UAAAA,IAAI,CAACE,OAAL,CAAa,CAAC,IAAD,IAASH,CAAC,GAAG,EAAb,CAAb;AACD;;AACDD,QAAAA,KAAK,CAACH,IAAN,CAAWK,IAAX;AACAH,QAAAA,WAAW,CAACF,IAAZ,CAAiB,IAAjB;AACA,aAAKnB,KAAL,CAAW2B,GAAX,CAAeH,IAAf;AACD;;AACD,WAAKtB,MAAL,CAAY0B,QAAZ,CAAqBC,CAArB,GAAyB,EAAzB;;AACA,WAAKC,OAAL,GAAe,YAAM;AACnBjC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,QAAAA,qBAAqB,CAAC,MAAI,CAAC+B,OAAN,CAArB;AACAR,QAAAA,KAAK,CAACS,OAAN,CAAc,UAACP,IAAD,EAAOQ,KAAP,EAAiB;AAC7B,cAAIR,IAAI,CAACS,QAAL,CAAcC,CAAd,GAAkB,GAAtB,EAA2B;AACzBb,YAAAA,WAAW,CAACW,KAAD,CAAX,GAAqB,CAAEX,WAAW,CAACW,KAAD,CAAlC;AACD;;AACD,cAAIR,IAAI,CAACS,QAAL,CAAcC,CAAd,GAAkB,CAAC,GAAvB,EAA4B;AAC1Bb,YAAAA,WAAW,CAACW,KAAD,CAAX,GAAqB,CAAEX,WAAW,CAACW,KAAD,CAAlC;AACD;;AACDR,UAAAA,IAAI,CAACS,QAAL,CAAcC,CAAd,IAAmBb,WAAW,CAACW,KAAD,CAA9B;AACD,SARD;;AASA,QAAA,MAAI,CAACzB,QAAL,CAAc4B,MAAd,CAAsB,MAAI,CAACnC,KAA3B,EAAkC,MAAI,CAACE,MAAvC;AACD,OAbD;AAcD;;;6BAUQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,aAAAkC,IAAG;AAAA,iBAAK,MAAI,CAAC1B,KAAL,GAAa0B,IAAlB;AAAA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKN,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAQD;;;;EArE0BpC,KAAK,CAAC2C,S;;AAwEnC,eAAe1C,cAAf","sourcesContent":["import * as THREE from 'three';\r\nimport React from 'react';\r\nimport '../styles/AnimationPanel.scss'\r\n\r\nclass AnimationPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    let material = new THREE.LineBasicMaterial({\r\n      color: 0xfd44f5,\r\n    });\r\n\r\n    let geometry = new THREE.Geometry();\r\n    geometry.vertices.push(\r\n      new THREE.Vector3( 0, 0.5, 10 ),\r\n      new THREE.Vector3( 0, 0, 0 )\r\n    );\r\n\r\n    let angleDeltas = [];\r\n    let lines = [];\r\n    for (let i = 0; i < 40; i++) {\r\n      const line = new THREE.Line(geometry, material);\r\n      if (i < 20) {\r\n        line.rotateX(0.07 * i);\r\n      } else {\r\n        line.rotateX(-0.07 * (i - 20));\r\n      }\r\n      lines.push(line);\r\n      angleDeltas.push(0.02);\r\n      this.scene.add(line);\r\n    }\r\n    this.camera.position.z = 10;\r\n    this.animate = () => {\r\n      console.log('animating');\r\n      requestAnimationFrame(this.animate);\r\n      lines.forEach((line, index) => {\r\n        if (line.rotation.y > 1.6) {\r\n          angleDeltas[index] = -(angleDeltas[index]);\r\n        }\r\n        if (line.rotation.y < -1.6) {\r\n          angleDeltas[index] = -(angleDeltas[index]);\r\n        }\r\n        line.rotation.y += angleDeltas[index];\r\n      });\r\n      this.renderer.render( this.scene, this.camera );\r\n    };\r\n  }\r\n\r\n  animate = () => {\r\n    console.log('animating');\r\n    requestAnimationFrame();\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AnimationPanel\">\r\n        <div ref={ref => (this.mount = ref)} />\r\n        <button onClick={this.animate}>\r\n          play\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimationPanel;"]},"metadata":{},"sourceType":"module"}