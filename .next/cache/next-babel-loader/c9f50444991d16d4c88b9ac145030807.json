{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elvin\\\\Development\\\\spotify-visual-creator\\\\components\\\\AnimationPanel.jsx\";\nvar __jsx = React.createElement;\nimport * as THREE from 'three';\nimport React from 'react';\nimport '../styles/AnimationPanel.scss';\n\nclass AnimationPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5);\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.renderer.domElement);\n    let material = new THREE.LineBasicMaterial({\n      color: 0xfd44f5\n    });\n    let geometry = new THREE.Geometry();\n    geometry.vertices.push(new THREE.Vector3(0, 0.5, 10), new THREE.Vector3(0, 0, 0));\n    let angleDeltas = [];\n    let lines = [];\n\n    for (let i = 0; i < 40; i++) {\n      const line = new THREE.Line(geometry, material);\n\n      if (i < 20) {\n        line.rotateX(0.07 * i);\n      } else {\n        line.rotateX(-0.07 * (i - 20));\n      }\n\n      lines.push(line);\n      angleDeltas.push(0.02);\n      this.scene.add(line);\n    }\n\n    this.camera.position.z = 10;\n\n    this.animate = function () {\n      requestAnimationFrame(this.animate);\n      lines.forEach((line, index) => {\n        if (line.rotation.y > 1.6) {\n          angleDeltas[index] = -angleDeltas[index];\n        }\n\n        if (line.rotation.y < -1.6) {\n          angleDeltas[index] = -angleDeltas[index];\n        }\n\n        line.rotation.y += angleDeltas[index];\n      });\n      this.renderer.render(this.scene, this.camera);\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"AnimationPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.animate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"play\"));\n  }\n\n}\n\nexport default AnimationPanel;","map":{"version":3,"sources":["C:/Users/elvin/Development/spotify-visual-creator/components/AnimationPanel.jsx"],"names":["THREE","React","AnimationPanel","Component","constructor","props","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","componentDidMount","mount","appendChild","domElement","material","LineBasicMaterial","color","geometry","Geometry","vertices","push","Vector3","angleDeltas","lines","i","line","Line","rotateX","add","position","z","animate","requestAnimationFrame","forEach","index","rotation","y","render","ref"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\r\nimport React from 'react';\r\nimport '../styles/AnimationPanel.scss'\r\n\r\nclass AnimationPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    let material = new THREE.LineBasicMaterial({\r\n      color: 0xfd44f5,\r\n    });\r\n\r\n    let geometry = new THREE.Geometry();\r\n    geometry.vertices.push(\r\n      new THREE.Vector3( 0, 0.5, 10 ),\r\n      new THREE.Vector3( 0, 0, 0 )\r\n    );\r\n\r\n    let angleDeltas = [];\r\n    let lines = [];\r\n    for (let i = 0; i < 40; i++) {\r\n      const line = new THREE.Line(geometry, material);\r\n      if (i < 20) {\r\n        line.rotateX(0.07 * i);\r\n      } else {\r\n        line.rotateX(-0.07 * (i - 20));\r\n      }\r\n      lines.push(line);\r\n      angleDeltas.push(0.02);\r\n      this.scene.add(line);\r\n    }\r\n    this.camera.position.z = 10;\r\n    this.animate =  function () {\r\n      requestAnimationFrame(this.animate);\r\n      lines.forEach((line, index) => {\r\n        if (line.rotation.y > 1.6) {\r\n          angleDeltas[index] = -(angleDeltas[index]);\r\n        }\r\n        if (line.rotation.y < -1.6) {\r\n          angleDeltas[index] = -(angleDeltas[index]);\r\n        }\r\n        line.rotation.y += angleDeltas[index];\r\n      });\r\n      this.renderer.render( this.scene, this.camera );\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AnimationPanel\">\r\n        <div ref={ref => (this.mount = ref)} />\r\n        <button onClick={this.animate}>\r\n          play\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimationPanel;"]},"metadata":{},"sourceType":"module"}